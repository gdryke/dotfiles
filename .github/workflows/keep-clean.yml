# This workflow will run when a cleanliness issue is closed, and open up a new issue based on the closed issue.
# TODO
# - Write the actual if logic of the loop of "things": running down reliability bugs, removing old feature flags, looking through TODOs and bugging people, etc
# - Setup templates for the opening
# - Figure out what inputs we have to check first: cleanliness label all up (bomb out if not) and then which specific label was closed

name: Upkeep Clock
on:
  issues:
    types: [closed]

jobs:
  tick-the-clock:
    if: contains(github.event.issue.labels.*.name, 'upkeep-clock')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - uses: actions/checkout@v2
      - name: Create the next clock issue
        uses: actions/github-script@main
        with:
          debug: true
          script: |
              const fs = require('fs');
              // figure out current index from label
              // find next in list
              // create the next issue 
              const issueTypes = [
                "clean-up-ffs",
                "clean-up-links",
                "reliability-bugs"];
              // TODO improvement. On any upkeep-clock close, we could look for the most recently opened version
              const openClockIssuesQuery = `query ($owner: String!, $name: String!) {
                repository(owner: $owner, name: $name) {
                  issues(labels: ["upkeep-clock"], last:1, states: [OPEN]) {
                    totalCount
                  }
                }
              }`;
              
              const openIssuesVariables = {
                owner: context.repo.owner,
                name: context.repo.repo
              }
              const openIssuesResult = await github.graphql(openClockIssuesQuery, openIssuesVariables)
              console.log("Open issue count": openIssuesResult);
              console.log("Getting closed issue details");
              const lastClosedQuery = `query ($owner: String!, $name: String!) {
                repository(owner: $owner, name: $name) {
                  issues(labels: ["upkeep-clock"], last:1, states: [CLOSED]) {
                    nodes {
                      number
                      labels(last: 10) {
                        edges {
                          node {
                            name
                          }
                        }
                      }
                    }
                  }
                }
              }`;
              
              const variables = {
                owner: context.repo.owner,
                name: context.repo.repo,
                number: context.issue.number
              }
              const result = await github.graphql(query, variables)
              console.log(result.repository.issues.nodes[0].labels)
              var labelList = result.repository.issues.nodes[0].labels.nodes;

              console.log("Matching closed issue labels to issue types");
              for (const issueLabel of labelList)
              {
                var currentIndex = 0;
                var labelName = issueLabel.name;
                for (const issueType of issueTypes) {
                  if (issueType == labelName) {
                    break
                  }
                  currentIndex++;
                }
              }
              var index = (currentIndex + 1) % 3;
              console.log("New issue type index: ", index);
              var whatIsNext = issueTypes[index];
              console.log("Next uplock clock issue will be:  " + whatIsNext);
              
              var filePath = "./.github/upkeep-clock/"+whatIsNext+".md";
              var rawIssueContent = fs.readFileSync(filePath, 'utf8');
              var issueContent = rawIssueContent + "\r\n\r\n**Created by:** LINK TODO";
              
              const issue = await github.rest.issues.create({
                  ...context.repo,
                  title: `Upkeep Clock: ${whatIsNext}`,
                  body: issueContent,
                  labels: [`upkeep-clock`, `${whatIsNext}`]
              });
              console.log(`Successfully created the issue ${issue.data.html_url}`);
