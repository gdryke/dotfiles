# This workflow will run when a cleanliness issue is closed, and open up a new issue based on the closed issue.
# TODO
# - Write the actual if logic of the loop of "things": running down reliability bugs, removing old feature flags, looking through TODOs and bugging people, etc
# - Setup templates for the opening
# - Figure out what inputs we have to check first: cleanliness label all up (bomb out if not) and then which specific label was closed

name: Upkeep Clock
on:
  issues:
    types: [closed]

jobs:
  tick-the-clock:
    if: contains(github.event.issue.labels.*.name, 'upkeep-clock')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - uses: actions/checkout@v2
      - name: Create the next clock issue
        uses: actions/github-script@main
        with:
          debug: true
          script: |
              const fs = require('fs');
              // figure out current index from label
              // find next in list
              // use index in file array
              // create issue with new label and new template
              // Add comment linking to this?
              const issueTypes = [
                "clean-up-ffs",
                "clean-up-links",
                "reliability-bugs"];
                
              const closedIssue = await github.rest.issues.get({
                ...context.repo,
                context.issue.number
              });

              var currentIndex = 0;
              for (const issueType of issueTypes) {
                if (closeIssue.labels.includes(issueType)) {
                  break
                }
                currentIndex++;
              }
              var index = (currentIndex + 1) % issueTypes.length;
              var whatIsNext = issueTypes[index];
              console.log("Next uplock clock issue will be:  " + whatIsNext);
              //var issueContent = getFileContents(whatIsNext+".md");
              var filePath = "./.github/upkeep-clock/"+whatIsNext+".md";
              var rawIssueContent = fs.readFileSync(filePath, 'utf8');
              var issueContent = rawIssueContent + "\r\n\r\n**Created by:** LINK TODO";
              const issue = await github.rest.issues.create({
                  ...context.repo,
                  title: `Upkeep Clock: ${whatIsNext}`,
                  body: issueContent,
                  labels: [`upkeep-clock`, `${whatIsNext}`]
              });
              console.log(`Successfully created the issue ${issue.data.html_url}`);
